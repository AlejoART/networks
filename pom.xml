<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.webpt</groupId>
	<artifactId>webpt-cucumber-starter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>cucumber-base</name>
	<url>http://maven.apache.org</url>

	<repositories>
		<repository>
			<id>repo-liferay</id>
			<name>oss-liferay</name>
			<url>https://repository.liferay.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>oss-sonatype</id>
			<name>oss-sonatype</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<testng.version>6.14.3</testng.version>
		<java.version>8</java.version>
		<selenium.version>3.11.0</selenium.version>
		<rest.assured.version>2.4.1</rest.assured.version>
		<assertj.version>3.6.2</assertj.version>
		<surefire.version>2.21.0</surefire.version>
		<failsafe.version>2.21.0</failsafe.version>
		<sonar.scanner.version>3.2</sonar.scanner.version>

        <threads>2</threads>
        <build.number>1</build.number>

        <tags/>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-testng</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-jxpath</groupId>
			<artifactId>commons-jxpath</artifactId>
			<version>1.3</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>ch.qos.logback</groupId>-->
			<!--<artifactId>logback-core</artifactId>-->
			<!--<version>1.2.3</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>ch.qos.logback</groupId>-->
			<!--<artifactId>logback-classic</artifactId>-->
			<!--<version>1.2.3</version>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.liferay</groupId>
			<artifactId>net.jsourcerer.webdriver.JSErrorCollector</artifactId>
			<version>0.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
        </dependency>
		<dependency>
			<groupId>com.github.mkolisnyk</groupId>
			<artifactId>cucumber-runner</artifactId>
			<version>1.0.8</version>
		</dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>3.16.0</version>
        </dependency>
        <dependency>
			<groupId>com.webpt.testing.atf</groupId>
			<artifactId>webpt-atf</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar.scanner.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<fork>true</fork>
					<meminitial>1024m</meminitial>
					<maxmem>2048</maxmem>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


            <!-- Execution of unit tests. Use if you wish to unit test some of you more complex testing logic -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<configuration>
                    <testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

            <!-- Setup for Automatic Parallel test execution -->
            <plugin>
                <groupId>com.github.temyers</groupId>
                <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        <id>generateRunners</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generateRunners</goal>
                        </goals>
                        <configuration>
                            <!-- Mandatory -->
                            <!-- comma separated list of package names to scan for glue code -->
                            <!--<glue>com.webpt.step.definition.bing</glue> -->
                            <glue>com.webpt.testing.atf.step.definition</glue>
                            <!-- These are optional, with the default values <name>json</name>
                                <extension>json</extension> -->
                            <!-- Where to output the generated tests -->
                            <outputDirectory>${project.build.directory}/cucumber-parallel/</outputDirectory>
                            <!-- The directory, which must be in the root of the runtime classpath,
                                containing your feature files. -->
                            <featuresDirectory>src/test/resources/features/</featuresDirectory>
                            <!-- Directory where the cucumber report files shall be written -->
                            <cucumberOutputDir>target/cucumber/data</cucumberOutputDir>
                            <!-- comma separated list of output formats -->
                            <format>json</format>
                            <!-- CucumberOptions.strict property -->
                            <strict>true</strict>
                            <!-- CucumberOptions.monochrome property -->
                            <monochrome>true</monochrome>
                            <!-- The tags to run, maps to CucumberOptions.tags property -->
                            <tags>${tags}</tags>

                            <!-- If set to true, only feature files containing the required tags
                                shall be generated. -->
                            <filterFeaturesByTags>true</filterFeaturesByTags>
                            <!-- Generate TestNG runners instead of JUnit ones. -->
                            <useTestNG>true</useTestNG>
                            <!-- The naming scheme to use for the generated test classes. One
                                of 'simple' or 'feature-title' -->
                            <namingScheme>simple</namingScheme>
                            <!-- The class naming pattern to use. Only required/used if naming
                                scheme is 'pattern'. -->
                            <namingPattern>Parallel{c}IT</namingPattern>
                            <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per
                                scenario. FEATURE generates a runner per feature. -->
                            <parallelScheme>FEATURE</parallelScheme>
                            <!-- Specify a custom template for the generated sources (this is
                                a path relative to the project base directory) -->
                            <customVmTemplate>/src/test/resources/runner-template.vm</customVmTemplate>

                            <!-- Specify a custom package name for generated sources. Default
                                is no package. -->
                            <packageName>webpt.tests.driver</packageName>

                        </configuration>
                    </execution>
                </executions>
            </plugin>



			<!-- Fail safe plugin handles execution of the cucumber tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <!--
                    The following lines are for multi threading with failsafe and temyers pluggins.
                    Remove these and uncomment the suiteXmlFiles below if you wish to allow testng
                    to control parallel processing
                    -->
                    <includes>
                        <include>Parallel*.java</include>
                    </includes>
                    <forkCount>${threads}</forkCount>
                    <runOrder>alphabetical</runOrder>
                    <!--
                    Use the below config if you wish to have detailed control of your test execution.
                    If you do this you will probably want to manually create runners for your features
                    so you can specify those runners in your testng.xml and control how your tests execute.
                    -->
                    <!--<suiteXmlFiles>-->
                        <!--<suiteXmlFile>target/test-classes/testng.xml</suiteXmlFile>-->
                    <!--</suiteXmlFiles>-->
                </configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>3.16.0</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>cucumber-testNG-starter</projectName>
							<outputDirectory>${project.build.directory}/report</outputDirectory>
                            <cucumberOutput>${project.build.directory}/cucumber/data</cucumberOutput>
							<parallelTesting>true</parallelTesting>
							<checkBuildResult>true</checkBuildResult>
							<buildNumber>${build.number}</buildNumber>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
